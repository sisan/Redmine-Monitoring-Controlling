<!--
Tasks by Statuses / Situação por Tarefas 
-->

<% #if @projects_subprojects.count > 1 %>

<script type="text/javascript" charset="utf-8">
    		var chart;
			var openedTasksId = "o";
			var closedTasksId = "c";
			
			$(document).ready(function() {
				
				//Gerando variaveis em javascript para identificar os projetos.
				<% @projects_subprojects.each do |project| %>
					var <%= project.identifier.parameterize.underscore %> = "<%=project.identifier%>";
				<% end %>
				
				chart = new Highcharts.Chart({
					chart: {
						renderTo: 'status-vs-project-bar-chart',
						type: 'bar',
						height: 250 + ((<%=@projects_subprojects.count%> - 1) * 55)
					},
			     	credits: {
			 		  enabled: false
					},
					scrollbar:{
			            enabled: true
			        },	
					title: {
						text: '<%=t :hr_issue_status_by_project%>'
		            },
		            subtitle: {
		                text: '<%=@project%>'
		            },
					xAxis: {
						categories: [
									<% @projects_subprojects.each do |project| %>
									 "<%=project.name%>",
									<% end %>
								    ],
						labels: {						       
									formatter: function() {
										var categoryLinks = {
											<% @projects_subprojects.each do |project| %>
											"<%=project.name%>": "/projects/<%=project.identifier%>?jump=redmine_monitoring_controlling",								   
											<% end %>
										};
										return '<a href="'+ categoryLinks[this.value] +'">'+ this.value +'</a>';
							},
							useHTML: true
						}
					},
					
					yAxis: {
						title: {
							text: '<%=t :hr_stackedcolumnbar_yaxis_label%>'
						}
					},
					legend: {
						backgroundColor: '#FFFFFF',
						reversed: false,
						y: -50
					},
					tooltip: {
						formatter: function() {
	                   		if (this.y === 0) {
                        		return null;
                    		} else {
								return '' + this.series.name +': '+ this.y + '%';
                    		}
						}
					},
			        plotOptions: {
			        	series: {
			            	cursor: 'pointer',
                			point: {
                    			events: {
                        			click: function() {
										window.open("/projects/" + this.project_id + "/issues?utf8=✓&set_filter=1&f[]=status_id&op[status_id]=" + this.status +"&f[]=subproject_id&op[subproject_id]=*&f[]=&c[]=tracker&c[]=parent&c[]=status&c[]=priority&c[]=subject&c[]=assigned_to&c[]=updated_on&c[]=category&c[]=due_date&c[]=done_ratio&group_by=");
                        			}
                    			}
                			},
			                stacking: 'normal'
			        	},
						bar: {
							dataLabels: {
  								formatter:function() {
    								if(this.y != 0) {
      									return this.y;
    								}
  								}
							}
						}
			        },
						series: 
					[
							{
								name: "<%=t :tobedelivered_label%>",
					            data: [ <% @projects_subprojects.map {|p| %>
						 										<%= "{y:" + (McTools.new.returnTotalOfOpenTasks(p.identifier) > 0 ? "#{(McTools.new.returnTotalOfOpenTasks(p.identifier).to_f * 100 / (McTools.new.returnTotalOfClosedTasks(p.identifier).to_f + McTools.new.returnTotalOfOpenTasks(p.identifier).to_f)).round(2).to_s}, " : "0, ") + "project_id: " + p.identifier.parameterize.underscore + ", status: openedTasksId}," %>
															<%}%> 
														],
								color: "#AA4643"
							},
							{	
								name: "<%=t :delivered_label%>",
					            data: [ <% @projects_subprojects.map {|p| %>
																<%= "{y:" + (McTools.new.returnTotalOfClosedTasks(p.identifier) > 0 ? "#{(McTools.new.returnTotalOfClosedTasks(p.identifier).to_f * 100 / (McTools.new.returnTotalOfClosedTasks(p.identifier).to_f + McTools.new.returnTotalOfOpenTasks(p.identifier).to_f)).round(2).to_s}, " : "0, ") + "project_id: " + p.identifier.parameterize.underscore + ", status: closedTasksId}," %>
															<%}%>
														],
								color: '#4572a7'
							}, 
					]
				});
				chart.chartBackground.css(
    			{
    				color: '#eeeeee',
    			});
			});
</script>


<!-- <script type="text/javascript" charset="utf-8">
				var chart;
			$(document).ready(function() {
				chart = new Highcharts.Chart({
					chart: {
						renderTo: 'status-tracked-bar-chart',
						type: 'bar'
					},
			     	credits: {
			 		  enabled: false
					},
					scrollbar:{
			            enabled: true
			        },	
					title: {
						text: '<%=t :hr_status_tracked_title_label%>'
		            },
		            subtitle: {
		                text: '<%=@project%>'
		            },
					xAxis: {
						categories: [
									<% @statusestrackeds.sort{|a,b| a.tracker_name <=> b.tracker_name}.group_by(&:tracker_name).each do |s, t| %>
									 "<%= s %>",
									<% end %>
								    ]
					},
					
					yAxis: {
						title: {
							text: '<%=t :hr_stackedcolumnbar_yaxis_label%>'
						}
					},
					legend: {
						backgroundColor: '#FFFFFF',
						reversed: false,
						y: -50
					},
					tooltip: {
						formatter: function() {
							return ''+
								this.series.name +': '+ this.y +'';
						}
					},
			        plotOptions: {
			                series: {
			                        cursor: 'pointer',
                					point: {
                    					events: {
                        					click: function() {
												window.open("/projects/<%=params[:id]%>/issues?utf8=✓&set_filter=1&f[]=status_id&op[status_id]=%3D&v[status_id][]=" + this.status_id + "&f[]=tracker_id&op[tracker_id]=%3D&v[tracker_id][]=" + this.tracker_id + "&f[]=subproject_id&op[subproject_id]=*&f[]=&c[]=tracker&c[]=parent&c[]=status&c[]=priority&c[]=subject&c[]=assigned_to&c[]=updated_on&c[]=category&c[]=due_date&c[]=done_ratio&group_by=");
                        					}
                    					}
                					},
			                        stacking: 'normal'
			                }
			        },
						series: 
					[
					<% @statusestrackeds.group_by(&:tracker_name).each do |s, t| %>
						<% t.each do |st| %>
							{
								name: '<%= st.status_name %>',
					            data: [ <%= @statusestrackeds.select{|st1| st1.status_id == st.status_id}.map{|st2| "#{st2.tracker_name}|#{st2.status_id}|#{st2.status_tracked_count}"}.sort{|a,b| a.split('|').first <=> b.split('|').first}.map{|st3| "{y:" + st3.split('|').last.to_s + ", status_id: " + IssueStatus.find(st3.split('|')[1]).id.to_s + ", tracker_id: " + Tracker.find_by_name(st3.split('|').first).id.to_s + "}," } %>]
							}, 
						<% end %>
						<% break %>
					<%end%>
					]
				});
				chart.chartBackground.css({
    					color: '#eeeeee'
    			});
			});

</script>
 -->
<!--
 Task Management / Gerenciamento de Tarefas
-->
<script type="text/javascript">
$(function () {
    var chart;
    $(document).ready(function() {
        chart = new Highcharts.Chart({
	     	credits: {
	 		  enabled: false
			},
            chart: {
                renderTo: 'managementissues',
                plotBackgroundColor: null,
                plotBorderWidth: null,
                plotShadow: false
            },
            title: {
                text: '<%=t :task_manageable_chart_title %>'
            },
            subtitle: {
                text: '<%=@project%>'
            },
            tooltip: {
                formatter: function() {
                    return '<b>'+ this.point.name +'</b>: '+ Highcharts.numberFormat(this.y,0)+ ' <%=t :tasksof_label%> '+<%= @project.issues.count %>;
                }
            },
            plotOptions: {
                pie: {
                    allowPointSelect: true,
                    cursor: 'pointer',
					showInLegend: true,
                    dataLabels: {
                        enabled: true,
                        color: '#000000',
                        connectorColor: '#000000',
						distance: 0,
                        formatter: function() {
                            return Highcharts.numberFormat(this.percentage,2) +' %';
                        }
                    }
                }
            },
            series: [{
                type: 'pie',
                name: 'Tarefas por Situação',
                data: <%=@managementissues.map{ |issue| [issue.typemanagement.to_s, issue.totalissues.to_i]}.inspect.html_safe%>
            }]
        });
		chart.chartBackground.css(
	    {
	    	color: '#eeeeee'
	    });
    });    
});
</script>

<script type="text/javascript">
$(function () {
    var chart;
    $(document).ready(function() {
        chart = new Highcharts.Chart({
	     	credits: {
	 		  enabled: false
			},
            chart: {
                renderTo: 'delayedissues',
                plotBackgroundColor: null,
                plotBorderWidth: null,
                plotShadow: false
            },
            title: {
                text: '<%=t :task_manageable_chart_overdue_title %>'
            },
            subtitle: {
                text: '<%=@project%>'
            },
            tooltip: {
                formatter: function() {
                    return '<b>'+ this.point.name +'</b>: '+ Highcharts.numberFormat(this.y,0)+ ' <%=t :tasksof_label%> '+<%= @managementissues.first.totalissues %>+' <%=t :manageable_label%>';
                }
            },
            plotOptions: {
                pie: {
                    allowPointSelect: true,
                    cursor: 'pointer',
					showInLegend: true,
                    dataLabels: {
                        enabled: true,
                        color: '#000000',
                        connectorColor: '#000000',
						distance: 0,
                        formatter: function() {
                            return Highcharts.numberFormat(this.percentage,2) +' %';
                        }
                    }
                }
            },
            series: [{
                type: 'pie',
                name: 'Tarefas atrasadas',
                data: <%=@overdueissueschart.map{ |issue| [issue.typeissue.to_s, issue.totalissuedelayed.to_i]}.inspect.html_safe%>
            }]
        });
		chart.chartBackground.css(
	    {
	    	color: '#eeeeee'
	    });
    });    
});

</script>



<script type="text/javascript" charset="utf-8">
				var chart;
			$(document).ready(function() {
				chart = new Highcharts.Chart({
					chart: {
						renderTo: 'categoryStackedColumn',
						type: 'bar',
						height: 250 + ((<%=@issuesbycategory.count%> - 1) * 55)
					},
			     	credits: {
			 		  enabled: false
					},
					scrollbar:{
			            enabled: true
			        },	
					title: {
						text: '<%=t :categories_issue_label_title%>'
			            },
			        subtitle: {
			            text: '<%=@project%>'
			        },
					xAxis: {
						categories: [
			   				<% @issuesbycategory.each do |cat| %>
   			     				<%= cat.name.to_s.inspect.html_safe %>,
			   				<%end%>
						]
					},
					
					yAxis: {
						title: {
							text: '<%=t :hr_stackedcolumnbar_yaxis_label%>'
						}
					},
					legend: {
						backgroundColor: '#FFFFFF',
						reversed: false,
						y: -50
					},
					tooltip: {
						formatter: function() {
							return ''+
								this.series.name +': '+ this.y +' ('+ Math.round(this.percentage) +'%)';
						}
					},
			        plotOptions: {
			                series: {
			                        cursor: 'pointer',
                					point: {
                    					events: {
                        					click: function() {
												window.open("/projects/<%=params[:id]%>/issues?utf8=✓&set_filter=1&f[]=status_id&op[status_id]=%3D&v[status_id][]=" + this.status_id + "&f[]=tracker_id&op[tracker_id]=%3D&v[tracker_id][]=" + this.tracker_id + "&f[]=subproject_id&op[subproject_id]=*&f[]=&c[]=tracker&c[]=parent&c[]=status&c[]=priority&c[]=subject&c[]=assigned_to&c[]=updated_on&c[]=category&c[]=due_date&c[]=done_ratio&group_by=");
                        					}
                    					}
                					},
			                        stacking: 'normal'
			                }
			        },
					series: [{
						name: '<%=t :tobedelivered_label%>',
						data: [
					 	   	<% @issuesbycategory.each do |cat| %>
		     			      <%= cat.totalundone %>,
					        <%end%>
						],
						color: '#AA4643'
				    	},{
						name: '<%=t :delivered_label%>',
						data: [
						 	   <% @issuesbycategory.each do |cat| %>
		         			      <%= cat.totaldone %>,
			       		       <%end%>				  
							],
						color: '#4572A7'
						}				
					]
				});
				chart.chartBackground.css({
    					color: '#eeeeee'
    			});
			});

</script>






